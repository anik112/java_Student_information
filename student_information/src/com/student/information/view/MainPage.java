/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.student.information.view;

import com.student.information.domain.CivilDpt;
import com.student.information.domain.ComputerDpt;
import com.student.information.domain.ElectricalDpt;
import com.student.information.domain.TelecommunictionDpt;
import com.student.information.service.CivilDptService;
import com.student.information.service.ComputerDptService;
import com.student.information.service.ElectricalDptService;
import com.student.information.service.TelecommunictionDptService;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anik
 */
public class MainPage extends javax.swing.JFrame {

    private String fileURL;
    private int student_DB_id;
    private int getBtnStatus = 0;
    private InputStream inputImage;

    private ComputerDpt computerDpt;
    private ComputerDptService computerDptService;
    private CivilDpt civilDpt;
    private CivilDptService civilDptService;
    private ElectricalDpt electricalDpt;
    private ElectricalDptService electricalDptService;
    private TelecommunictionDpt telecommunictionDpt;
    private TelecommunictionDptService telecommunictionDptService;

    /**
     * Creates new form TestFrm
     */
    public MainPage() {
        initComponents();
        this.setTitle("Student Management System"); // Set title in this fream
        computerDptDesplayInTable(); // Show computer department information in table
        lblShowCurrentDpt.setText("Computer Department"); // set current department in lable
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        allRadioBtnGroup = new javax.swing.ButtonGroup();
        scrolpanMain = new javax.swing.JScrollPane();
        mainPan = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtStudentId = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtSurname = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtMobileNumber = new javax.swing.JTextField();
        txtHouseNo = new javax.swing.JTextField();
        txtPostCOde = new javax.swing.JTextField();
        txtDptCode = new javax.swing.JTextField();
        radioBtnMale = new javax.swing.JRadioButton();
        radioBtnFemale = new javax.swing.JRadioButton();
        comboDateOfBirthDay = new javax.swing.JComboBox<>();
        comboDateOfBirthMonth = new javax.swing.JComboBox<>();
        comboDateOfBirthYear = new javax.swing.JComboBox<>();
        lblShowMassage = new javax.swing.JLabel();
        btnAddRecord = new javax.swing.JButton();
        btnEditRecord = new javax.swing.JButton();
        btnDeleteRecord = new javax.swing.JButton();
        lblShowImage = new javax.swing.JLabel();
        btnImageChoose = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaPresentAddress = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaPermanentAddress = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblShowCurrentInformation = new javax.swing.JTable();
        lblShowTableHadder = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtSearchBar = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnRefrashAllMethod = new javax.swing.JButton();
        lblShowCurrentDpt = new javax.swing.JLabel();
        btnComputerStudentList = new javax.swing.JButton();
        btnElectricalStudentList = new javax.swing.JButton();
        btnCivilStudentList = new javax.swing.JButton();
        btnTelecommunicationStudentList = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        comboSelectDpt = new javax.swing.JComboBox<>();

        jScrollBar1.setUnitIncrement(50);
        jScrollBar1.setValueIsAdjusting(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        scrolpanMain.setVerticalScrollBar(jScrollBar1);

        mainPan.setBackground(new java.awt.Color(255, 255, 255));
        mainPan.setPreferredSize(new java.awt.Dimension(1300, 1250));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2), "[ Add Student Information ]", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Vrinda", 0, 18), new java.awt.Color(51, 51, 51))); // NOI18N

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 102));
        jLabel9.setText("Permanent address:");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("Date of birth:");

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("Post code:");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Surname:");

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 102, 102));
        jLabel12.setText("Dpt code:");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Gender:");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Student ID:");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Present address:");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("First name:");

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("Apt/House no:");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Mobile number:");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Email:");

        txtStudentId.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        txtStudentId.setForeground(new java.awt.Color(102, 102, 102));

        txtFirstName.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        txtFirstName.setForeground(new java.awt.Color(102, 102, 102));

        txtSurname.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        txtSurname.setForeground(new java.awt.Color(102, 102, 102));

        txtEmail.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(102, 102, 102));

        txtMobileNumber.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        txtMobileNumber.setForeground(new java.awt.Color(102, 102, 102));

        txtHouseNo.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        txtHouseNo.setForeground(new java.awt.Color(102, 102, 102));

        txtPostCOde.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        txtPostCOde.setForeground(new java.awt.Color(102, 102, 102));

        txtDptCode.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        txtDptCode.setForeground(new java.awt.Color(102, 102, 102));

        allRadioBtnGroup.add(radioBtnMale);
        radioBtnMale.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        radioBtnMale.setForeground(new java.awt.Color(102, 102, 102));
        radioBtnMale.setSelected(true);
        radioBtnMale.setText("Male");
        radioBtnMale.setContentAreaFilled(false);
        radioBtnMale.setFocusable(false);
        radioBtnMale.setIconTextGap(10);
        radioBtnMale.setMargin(new java.awt.Insets(5, 5, 5, 5));
        radioBtnMale.setRequestFocusEnabled(false);

        allRadioBtnGroup.add(radioBtnFemale);
        radioBtnFemale.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        radioBtnFemale.setForeground(new java.awt.Color(102, 102, 102));
        radioBtnFemale.setText("Female");
        radioBtnFemale.setContentAreaFilled(false);
        radioBtnFemale.setFocusable(false);
        radioBtnFemale.setIconTextGap(10);
        radioBtnFemale.setMargin(new java.awt.Insets(5, 5, 5, 5));
        radioBtnFemale.setRequestFocusEnabled(false);

        comboDateOfBirthDay.setEditable(true);
        comboDateOfBirthDay.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        comboDateOfBirthDay.setForeground(new java.awt.Color(204, 204, 204));
        comboDateOfBirthDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        comboDateOfBirthMonth.setEditable(true);
        comboDateOfBirthMonth.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        comboDateOfBirthMonth.setForeground(new java.awt.Color(204, 204, 204));
        comboDateOfBirthMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        comboDateOfBirthYear.setEditable(true);
        comboDateOfBirthYear.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        comboDateOfBirthYear.setForeground(new java.awt.Color(204, 204, 204));
        comboDateOfBirthYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2015", "2016", "2017", "2018", "2019", "2020" }));

        lblShowMassage.setBackground(new java.awt.Color(255, 255, 255));
        lblShowMassage.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        lblShowMassage.setForeground(new java.awt.Color(255, 0, 51));
        lblShowMassage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblShowMassage.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2), "[ Massage ]", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 102, 102))); // NOI18N

        btnAddRecord.setFont(new java.awt.Font("Vrinda", 1, 14)); // NOI18N
        btnAddRecord.setForeground(new java.awt.Color(0, 204, 0));
        btnAddRecord.setText("ADD Record");
        btnAddRecord.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddRecord.setContentAreaFilled(false);
        btnAddRecord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRecordActionPerformed(evt);
            }
        });

        btnEditRecord.setFont(new java.awt.Font("Vrinda", 1, 14)); // NOI18N
        btnEditRecord.setForeground(new java.awt.Color(204, 204, 0));
        btnEditRecord.setText("EDIT Record");
        btnEditRecord.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEditRecord.setContentAreaFilled(false);
        btnEditRecord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditRecordActionPerformed(evt);
            }
        });

        btnDeleteRecord.setFont(new java.awt.Font("Vrinda", 1, 14)); // NOI18N
        btnDeleteRecord.setForeground(new java.awt.Color(255, 0, 0));
        btnDeleteRecord.setText("DELETE Record");
        btnDeleteRecord.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteRecord.setContentAreaFilled(false);
        btnDeleteRecord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRecordActionPerformed(evt);
            }
        });

        lblShowImage.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        lblShowImage.setForeground(new java.awt.Color(255, 0, 0));
        lblShowImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblShowImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        lblShowImage.setPreferredSize(new java.awt.Dimension(200, 200));

        btnImageChoose.setFont(new java.awt.Font("Vrinda", 1, 14)); // NOI18N
        btnImageChoose.setForeground(new java.awt.Color(0, 153, 153));
        btnImageChoose.setText("Choose Image");
        btnImageChoose.setBorder(null);
        btnImageChoose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImageChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImageChooseActionPerformed(evt);
            }
        });

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 102, 102));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Choose image MAX(200KB)");

        txtAreaPresentAddress.setColumns(20);
        txtAreaPresentAddress.setRows(5);
        jScrollPane2.setViewportView(txtAreaPresentAddress);

        txtAreaPermanentAddress.setColumns(20);
        txtAreaPermanentAddress.setRows(5);
        jScrollPane3.setViewportView(txtAreaPermanentAddress);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnImageChoose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblShowImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel3))))
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radioBtnMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioBtnFemale))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(comboDateOfBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboDateOfBirthMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboDateOfBirthYear, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAddRecord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPostCOde, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHouseNo, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDptCode, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblShowMassage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblShowImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImageChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHouseNo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPostCOde, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDptCode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblShowMassage, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboDateOfBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboDateOfBirthMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboDateOfBirthYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioBtnMale)
                            .addComponent(radioBtnFemale))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        jLabel13.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 204, 204));
        jLabel13.setText("2017-18 All Rights Reserved. Student Management System");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));

        tblShowCurrentInformation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Student ID", "First Name", "Sur Name", "Date of birth", "Gender", "Email", "Number", "Preasent Address", "Permanent Address", "House No", "Post Code", "Dpt Code"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShowCurrentInformation.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(tblShowCurrentInformation);

        lblShowTableHadder.setFont(new java.awt.Font("Vrinda", 0, 18)); // NOI18N
        lblShowTableHadder.setForeground(new java.awt.Color(102, 102, 102));
        lblShowTableHadder.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(lblShowTableHadder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblShowTableHadder, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));

        jLabel14.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Student Management System");
        jLabel14.setToolTipText("");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
        );

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 102, 102));
        jLabel15.setText("Search by student ID >>");

        txtSearchBar.setFont(new java.awt.Font("Vrinda", 0, 14)); // NOI18N
        txtSearchBar.setForeground(new java.awt.Color(0, 153, 255));
        txtSearchBar.setMargin(new java.awt.Insets(5, 10, 5, 5));

        btnSearch.setFont(new java.awt.Font("Vrinda", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(0, 153, 153));
        btnSearch.setText("Search");
        btnSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(7, 140, 150), 2));
        btnSearch.setContentAreaFilled(false);
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnRefrashAllMethod.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnRefrashAllMethod.setForeground(new java.awt.Color(255, 51, 0));
        btnRefrashAllMethod.setText("| Refresh all method [*]? |");
        btnRefrashAllMethod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btnRefrashAllMethod.setContentAreaFilled(false);
        btnRefrashAllMethod.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRefrashAllMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrashAllMethodActionPerformed(evt);
            }
        });

        lblShowCurrentDpt.setBackground(new java.awt.Color(255, 255, 255));
        lblShowCurrentDpt.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        lblShowCurrentDpt.setForeground(new java.awt.Color(255, 0, 51));
        lblShowCurrentDpt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblShowCurrentDpt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 2));

        btnComputerStudentList.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        btnComputerStudentList.setForeground(new java.awt.Color(102, 0, 102));
        btnComputerStudentList.setText("Computer Student List");
        btnComputerStudentList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btnComputerStudentList.setContentAreaFilled(false);
        btnComputerStudentList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnComputerStudentList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComputerStudentListActionPerformed(evt);
            }
        });

        btnElectricalStudentList.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        btnElectricalStudentList.setForeground(new java.awt.Color(102, 0, 102));
        btnElectricalStudentList.setText("Electrical Student List");
        btnElectricalStudentList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btnElectricalStudentList.setContentAreaFilled(false);
        btnElectricalStudentList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnElectricalStudentList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElectricalStudentListActionPerformed(evt);
            }
        });

        btnCivilStudentList.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        btnCivilStudentList.setForeground(new java.awt.Color(102, 0, 102));
        btnCivilStudentList.setText("Civil Student List");
        btnCivilStudentList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btnCivilStudentList.setContentAreaFilled(false);
        btnCivilStudentList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCivilStudentList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCivilStudentListActionPerformed(evt);
            }
        });

        btnTelecommunicationStudentList.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        btnTelecommunicationStudentList.setForeground(new java.awt.Color(102, 0, 102));
        btnTelecommunicationStudentList.setText("Telecommunication Student List");
        btnTelecommunicationStudentList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btnTelecommunicationStudentList.setContentAreaFilled(false);
        btnTelecommunicationStudentList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTelecommunicationStudentList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelecommunicationStudentListActionPerformed(evt);
            }
        });

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("Select Department:");

        comboSelectDpt.setEditable(true);
        comboSelectDpt.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        comboSelectDpt.setForeground(new java.awt.Color(204, 204, 204));
        comboSelectDpt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer", "Electrical", "Civil", "Telecommunication" }));
        comboSelectDpt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboSelectDptItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboSelectDpt, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(comboSelectDpt))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout mainPanLayout = new javax.swing.GroupLayout(mainPan);
        mainPan.setLayout(mainPanLayout);
        mainPanLayout.setHorizontalGroup(
            mainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(mainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanLayout.createSequentialGroup()
                        .addComponent(btnRefrashAllMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(mainPanLayout.createSequentialGroup()
                        .addGroup(mainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblShowCurrentDpt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel15)
                            .addGroup(mainPanLayout.createSequentialGroup()
                                .addComponent(txtSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(mainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnComputerStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTelecommunicationStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCivilStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnElectricalStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        mainPanLayout.setVerticalGroup(
            mainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblShowCurrentDpt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(btnRefrashAllMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanLayout.createSequentialGroup()
                        .addComponent(btnComputerStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnElectricalStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCivilStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTelecommunicationStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        scrolpanMain.setViewportView(mainPan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrolpanMain, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrolpanMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * # Add record, this button add new student record in database.
     *
     * @param evt
     */
    private void btnAddRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRecordActionPerformed
        // TODO add your handling code here:

        // Computer, Electrical, Civil, Telecommunication
        String gander = "";
        if (radioBtnMale.isSelected()) {    // If radio button Male is selected than gander=Male;
            gander = "Male";
        } else if (radioBtnFemale.isSelected()) { // If radio button Female is selected then gander=Female;
            gander = "Female";
        }

        // if Department = Computer then:
        if ((comboSelectDpt.getSelectedItem().toString()).equals("Computer")) {

            try {
                // create computer department object,
                computerDpt = new ComputerDpt(
                        Integer.parseInt(txtStudentId.getText()),
                        txtFirstName.getText(),
                        txtSurname.getText(),
                        comboDateOfBirthDay.getSelectedItem().toString()
                        + "/" + comboDateOfBirthMonth.getSelectedItem().toString()
                        + "/" + comboDateOfBirthYear.getSelectedItem().toString(),
                        gander,
                        txtEmail.getText(),
                        txtMobileNumber.getText(),
                        txtAreaPresentAddress.getText(),
                        txtAreaPermanentAddress.getText(),
                        txtHouseNo.getText(),
                        Integer.parseInt(txtPostCOde.getText()),
                        Integer.parseInt(txtDptCode.getText())
                );
                // if fileURL is not null then save record in database.
                if (fileURL != null) {
                    // set image in variable,
                    // get file url and conv file fileInputStream , and make image_ICON
                    computerDpt.setImage(new FileInputStream(new File(fileURL)));
                    fileURL = null;

                    // Call computer department service
                    computerDptService = new ComputerDptService();
                    computerDptService.saveRecord(computerDpt); // call save() method from computer department
                    lblShowMassage.setText("Record Add Successful"); // Show massage
                    refreshTable(); // Refresh Table
                    computerDptDesplayInTable(); // Desplay computer department student list
                    refreshAllFld(); // Refresh all FLD
                } else {
                    // Show massage in massage box.
                    JOptionPane.showMessageDialog(null, "Please first select image");
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        } // Else if Department= Electrical then:
        else if ((comboSelectDpt.getSelectedItem().toString()).equals("Electrical")) {
            try {
                // create Electrical Department object,
                electricalDpt = new ElectricalDpt(
                        Integer.parseInt(txtStudentId.getText()),
                        txtFirstName.getText(),
                        txtSurname.getText(),
                        comboDateOfBirthDay.getSelectedItem().toString()
                        + "/" + comboDateOfBirthMonth.getSelectedItem().toString()
                        + "/" + comboDateOfBirthYear.getSelectedItem().toString(),
                        gander,
                        txtEmail.getText(),
                        txtMobileNumber.getText(),
                        txtAreaPresentAddress.getText(),
                        txtAreaPermanentAddress.getText(),
                        txtHouseNo.getText(),
                        Integer.parseInt(txtPostCOde.getText()),
                        Integer.parseInt(txtDptCode.getText())
                );
                // if fileURL is not null then save record in database.
                if (fileURL != null) {
                    // set image in variable,
                    // get file url and conv file fileInputStream , and make image_ICON
                    electricalDpt.setImage(new FileInputStream(new File(fileURL)));
                    fileURL = null;

                    // create electrical department servic object
                    electricalDptService = new ElectricalDptService();
                    electricalDptService.saveRecord(electricalDpt); // call save() method from electrical department
                    lblShowMassage.setText("Record Add Successful"); // Show msg
                    refreshTable(); // Refrsh Table
                    electricalDptDesplayInTable(); // Desplay information in Table
                    refreshAllFld(); // Refresh all FLD
                } else {
                    // Show massage in massage box.
                    JOptionPane.showMessageDialog(null, "Please first select image");
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        } // Else if Department= Civil then:
        else if ((comboSelectDpt.getSelectedItem().toString()).equals("Civil")) {

            try {
                // create civil department object.
                civilDpt = new CivilDpt(
                        Integer.parseInt(txtStudentId.getText()),
                        txtFirstName.getText(),
                        txtSurname.getText(),
                        comboDateOfBirthDay.getSelectedItem().toString()
                        + "/" + comboDateOfBirthMonth.getSelectedItem().toString()
                        + "/" + comboDateOfBirthYear.getSelectedItem().toString(),
                        gander,
                        txtEmail.getText(),
                        txtMobileNumber.getText(),
                        txtAreaPresentAddress.getText(),
                        txtAreaPermanentAddress.getText(),
                        txtHouseNo.getText(),
                        Integer.parseInt(txtPostCOde.getText()),
                        Integer.parseInt(txtDptCode.getText())
                );
                // If fileURL id not null then save data in database,
                if (fileURL != null) {
                    // set image in variable.
                    // get file url and conv file fileInputStream , and make image_ICON
                    civilDpt.setImage(new FileInputStream(new File(fileURL)));
                    fileURL = null;

                    // create civile department service object
                    civilDptService = new CivilDptService();
                    civilDptService.saveRecord(civilDpt); // call save() method from civil department
                    lblShowMassage.setText("Record Add Successful"); // Show msg
                    refreshTable(); // Refresh Table
                    civilDptDesplayInTable(); // Desplay civil department information list.
                    refreshAllFld(); // Refresh all FLD
                } else {
                    // shoe message in message box.
                    JOptionPane.showMessageDialog(null, "Please first select image");
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        } // If Department= Telecommunication then:
        else if ((comboSelectDpt.getSelectedItem().toString()).equals("Telecommunication")) {
            try {
                // create telecommunication department object.
                telecommunictionDpt = new TelecommunictionDpt(
                        Integer.parseInt(txtStudentId.getText()),
                        txtFirstName.getText(),
                        txtSurname.getText(),
                        comboDateOfBirthDay.getSelectedItem().toString()
                        + "/" + comboDateOfBirthMonth.getSelectedItem().toString()
                        + "/" + comboDateOfBirthYear.getSelectedItem().toString(),
                        gander,
                        txtEmail.getText(),
                        txtMobileNumber.getText(),
                        txtAreaPresentAddress.getText(),
                        txtAreaPermanentAddress.getText(),
                        txtHouseNo.getText(),
                        Integer.parseInt(txtPostCOde.getText()),
                        Integer.parseInt(txtDptCode.getText())
                );
                // If fillURL is not null then save data in database.
                if (fileURL != null) {
                    // set image in variable
                    // get file url and conv file fileInputStream , and make image_ICON
                    telecommunictionDpt.setImage(new FileInputStream(new File(fileURL)));
                    fileURL = null;

                    // create telecommunictaion department service
                    telecommunictionDptService = new TelecommunictionDptService();
                    telecommunictionDptService.saveRecord(telecommunictionDpt); // call save() method from televommnuiction department
                    lblShowMassage.setText("Record Add Successful"); // show msg
                    refreshTable(); // Refresh table
                    telecommunictionDptDesplayInTable(); // Desplay telecommunication department information list
                    refreshAllFld(); // Refresh FLD

                } else {
                    // Show message in message box.
                    JOptionPane.showMessageDialog(null, "Please first select image");
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }


    }//GEN-LAST:event_btnAddRecordActionPerformed

    /**
     * # Image chooser, this button set student image.
     *
     * @param evt
     */
    private void btnImageChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImageChooseActionPerformed
        // TODO add your handling code here:

        getBtnStatus = 1123; // Set button status
        lblShowImage.setIcon(null); // set label icon is null.
        lblShowImage.setText(null); // set label text is null.

        // call JFileChooser and create object
        JFileChooser fileChooser = new JFileChooser();
        // Set Current Directory in file chooser
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        // Set File extension in file chooser
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", ".jpg", ".gif", ".png");
        // add file filter in file chooser
        fileChooser.addChoosableFileFilter(filter);
        // set fileChooser for work, and get result
        int result = fileChooser.showSaveDialog(null);
        // If any file choose then:
        if (result == JFileChooser.APPROVE_OPTION) {
            // get selected file,
            File file = fileChooser.getSelectedFile();
            // get file absolute path from file
            String path = file.getAbsolutePath();
            //System.out.println(file.length());
            // set file length, max ( 20000 )
            if (file.length() < 200000) {
                // create get file in icon and show in label.
                lblShowImage.setIcon(new javax.swing.ImageIcon(path));
                fileURL = path; // set path in fileURL variable

            } else {
                // show message in message box.
                JOptionPane.showMessageDialog(null, "File TO large");
            }
        }

    }//GEN-LAST:event_btnImageChooseActionPerformed

    /**
     * # Edit button, this button edit all information which row is selected.
     *
     * @param evt
     */
    private void btnEditRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditRecordActionPerformed
        // TODO add your handling code here:

        String gander = "";
        if (radioBtnMale.isSelected()) {
            gander = "Male";
        } else if (radioBtnFemale.isSelected()) {
            gander = "Female";
        }

        // If computer department is selected then:
        if ((comboSelectDpt.getSelectedItem().toString()).equals("Computer")) {

            int key = 0;
            try {
                computerDpt = new ComputerDpt(
                        Integer.parseInt(txtStudentId.getText()),
                        txtFirstName.getText(),
                        txtSurname.getText(),
                        comboDateOfBirthDay.getSelectedItem().toString()
                        + "/" + comboDateOfBirthMonth.getSelectedItem().toString()
                        + "/" + comboDateOfBirthYear.getSelectedItem().toString(),
                        gander,
                        txtEmail.getText(),
                        txtMobileNumber.getText(),
                        txtAreaPresentAddress.getText(),
                        txtAreaPermanentAddress.getText(),
                        txtHouseNo.getText(),
                        Integer.parseInt(txtPostCOde.getText()),
                        Integer.parseInt(txtDptCode.getText())
                );
                // If file chooser button is click then:
                if (getBtnStatus == 1123) { // get button status
                    if (fileURL != null) { // check fileURL, if fileUrl is not null
                        computerDpt.setImage(new FileInputStream(new File(fileURL))); // then set iamge in variable
                        getBtnStatus = 0; // reset button status
                        fileURL = null; // reset fileURL
                    } else {
                        key = 112; // set key
                    }
                } else {
                    computerDpt.setImage(inputImage);
                    getBtnStatus = 0;
                }
                computerDpt.setId(student_DB_id);

            } catch (Exception e) {
                e.printStackTrace();
            }

            if (key != 112) {
                computerDptService = new ComputerDptService();
                computerDptService.editRecord(computerDpt);
                lblShowMassage.setText("Record Update Successful");
                refreshTable();
                computerDptDesplayInTable();
                refreshAllFld();
            } else {
                JOptionPane.showMessageDialog(null, "Please first select image");
            }

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Electrical")) {

            int key = 0;
            try {
                electricalDpt = new ElectricalDpt(
                        Integer.parseInt(txtStudentId.getText()),
                        txtFirstName.getText(),
                        txtSurname.getText(),
                        comboDateOfBirthDay.getSelectedItem().toString()
                        + "/" + comboDateOfBirthMonth.getSelectedItem().toString()
                        + "/" + comboDateOfBirthYear.getSelectedItem().toString(),
                        gander,
                        txtEmail.getText(),
                        txtMobileNumber.getText(),
                        txtAreaPresentAddress.getText(),
                        txtAreaPermanentAddress.getText(),
                        txtHouseNo.getText(),
                        Integer.parseInt(txtPostCOde.getText()),
                        Integer.parseInt(txtDptCode.getText())
                );
                if (getBtnStatus == 1123) {
                    if (fileURL != null) {
                        electricalDpt.setImage(new FileInputStream(new File(fileURL)));
                        getBtnStatus = 0;
                        fileURL = null;
                    } else {
                        key = 112;
                    }

                } else {
                    electricalDpt.setImage(inputImage);
                    getBtnStatus = 0;
                }
                electricalDpt.setId(student_DB_id);

            } catch (Exception e) {
                e.printStackTrace();
            }

            if (key != 112) {
                electricalDptService = new ElectricalDptService();
                electricalDptService.editRecord(electricalDpt);
                lblShowMassage.setText("Record Update Successful");
                refreshTable();
                electricalDptDesplayInTable();
                refreshAllFld();
            } else {
                JOptionPane.showMessageDialog(null, "Please first select image");
            }

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Civil")) {

            int key = 0;
            try {
                civilDpt = new CivilDpt(
                        Integer.parseInt(txtStudentId.getText()),
                        txtFirstName.getText(),
                        txtSurname.getText(),
                        comboDateOfBirthDay.getSelectedItem().toString()
                        + "/" + comboDateOfBirthMonth.getSelectedItem().toString()
                        + "/" + comboDateOfBirthYear.getSelectedItem().toString(),
                        gander,
                        txtEmail.getText(),
                        txtMobileNumber.getText(),
                        txtAreaPresentAddress.getText(),
                        txtAreaPermanentAddress.getText(),
                        txtHouseNo.getText(),
                        Integer.parseInt(txtPostCOde.getText()),
                        Integer.parseInt(txtDptCode.getText())
                );
                if (getBtnStatus == 1123) {
                    if (fileURL != null) {
                        civilDpt.setImage(new FileInputStream(new File(fileURL)));
                        getBtnStatus = 0;
                        fileURL = null;
                    } else {
                        key = 112;
                    }

                } else {
                    civilDpt.setImage(inputImage);
                    getBtnStatus = 0;
                }
                civilDpt.setId(student_DB_id);

            } catch (Exception e) {
                e.printStackTrace();
            }

            if (key != 112) {
                civilDptService = new CivilDptService();
                civilDptService.editRecord(civilDpt);
                lblShowMassage.setText("Record Update Successful");
                refreshTable();
                civilDptDesplayInTable();
                refreshAllFld();
            } else {
                JOptionPane.showMessageDialog(null, "Please first select image");
            }

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Telecommunication")) {

            int key = 0;
            try {
                telecommunictionDpt = new TelecommunictionDpt(
                        Integer.parseInt(txtStudentId.getText()),
                        txtFirstName.getText(),
                        txtSurname.getText(),
                        comboDateOfBirthDay.getSelectedItem().toString()
                        + "/" + comboDateOfBirthMonth.getSelectedItem().toString()
                        + "/" + comboDateOfBirthYear.getSelectedItem().toString(),
                        gander,
                        txtEmail.getText(),
                        txtMobileNumber.getText(),
                        txtAreaPresentAddress.getText(),
                        txtAreaPermanentAddress.getText(),
                        txtHouseNo.getText(),
                        Integer.parseInt(txtPostCOde.getText()),
                        Integer.parseInt(txtDptCode.getText())
                );
                if (getBtnStatus == 1123) {

                    if (fileURL != null) {
                        telecommunictionDpt.setImage(new FileInputStream(new File(fileURL)));
                        getBtnStatus = 0;
                        fileURL = null;
                    } else {
                        key = 112;
                    }

                } else {
                    telecommunictionDpt.setImage(inputImage);
                    getBtnStatus = 0;
                }
                telecommunictionDpt.setId(student_DB_id);

            } catch (Exception e) {
                e.printStackTrace();
            }

            if (key != 112) {
                telecommunictionDptService = new TelecommunictionDptService();
                telecommunictionDptService.editRecord(telecommunictionDpt);
                lblShowMassage.setText("Record Update Successful");
                refreshTable();
                telecommunictionDptDesplayInTable();
                refreshAllFld();
            } else {
                JOptionPane.showMessageDialog(null, "Please first select image");
            }

        }


    }//GEN-LAST:event_btnEditRecordActionPerformed

    /**
     * # Delete button, this button delete selected row.
     *
     * @param evt
     */
    private void btnDeleteRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRecordActionPerformed
        // TODO add your handling code here:

        if ((comboSelectDpt.getSelectedItem().toString()).equals("Computer")) {

            computerDptService = new ComputerDptService();
            computerDptService.deleteRecord(student_DB_id);
            lblShowMassage.setText("Record Delete Successful");
            refreshAllFld();
            refreshTable();
            computerDptDesplayInTable();

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Electrical")) {

            electricalDptService = new ElectricalDptService();
            electricalDptService.deleteRecord(student_DB_id);
            lblShowMassage.setText("Record Delete Successful");
            refreshAllFld();
            refreshTable();
            electricalDptDesplayInTable();

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Civil")) {

            civilDptService = new CivilDptService();
            civilDptService.deleteRecord(student_DB_id);
            lblShowMassage.setText("Record Delete Successful");
            refreshAllFld();
            refreshTable();
            civilDptDesplayInTable();

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Telecommunication")) {

            telecommunictionDptService = new TelecommunictionDptService();
            telecommunictionDptService.deleteRecord(student_DB_id);
            lblShowMassage.setText("Record Delete Successful");
            refreshAllFld();
            refreshTable();
            telecommunictionDptDesplayInTable();

        }


    }//GEN-LAST:event_btnDeleteRecordActionPerformed

    /**
     * # Search button, this button search student information in table.
     *
     * @param evt
     */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:

        Image image;
        ImageIcon icon;
        String date_of_birth;
        String day;
        String month;
        String year;

        // Computer Depertment
        if ((comboSelectDpt.getSelectedItem().toString()).equals("Computer")) {

            computerDptService = new ComputerDptService();

            refreshAllFld();

            computerDpt = computerDptService.searchRecord(Integer.parseInt(txtSearchBar.getText()));

            if (computerDpt != null) {

                student_DB_id = computerDpt.getId();
                txtStudentId.setText(String.valueOf(computerDpt.getStudent_id()));
                txtFirstName.setText(computerDpt.getStudent_fst_name());
                txtSurname.setText(computerDpt.getStudent_sur_name());

                if (computerDpt.getDate_of_birth() != null) {

                    // get [ day,month,year ] from date_of_birth
                    date_of_birth = computerDpt.getDate_of_birth();
                    day = date_of_birth.split("/")[0];
                    //System.out.println(day);
                    month = date_of_birth.split("/")[1];
                    //System.out.println(month);
                    year = date_of_birth.split("/")[2];
                    //System.out.println(year);
                    // set [ day,month,year ] in combo panel
                    comboDateOfBirthDay.setSelectedItem(day);
                    comboDateOfBirthMonth.setSelectedItem(month);
                    comboDateOfBirthYear.setSelectedItem(year);

                } else {
                    comboDateOfBirthDay.setSelectedIndex(0);
                    comboDateOfBirthMonth.setSelectedIndex(0);
                    comboDateOfBirthYear.setSelectedIndex(0);
                }

                if (computerDpt.getGander() != null) {
                    if (computerDpt.getGander().equals("Male")) {
                        radioBtnMale.setSelected(true);
                    } else if (computerDpt.getGander().equals("Female")) {
                        radioBtnFemale.setSelected(true);
                    }
                }

                txtEmail.setText(computerDpt.getEmail());
                txtMobileNumber.setText(computerDpt.getNumber());
                txtAreaPresentAddress.setText(computerDpt.getPresent_address());
                txtAreaPermanentAddress.setText(computerDpt.getPermanent_address());
                txtHouseNo.setText(computerDpt.getHouse_no());
                txtPostCOde.setText(String.valueOf(computerDpt.getPost_code()));
                txtDptCode.setText(String.valueOf(computerDpt.getDpt_code()));

                if (computerDpt.getGetImage() != null) {
                    image = getToolkit().createImage(computerDpt.getGetImage());
                    icon = new ImageIcon(image);
                    lblShowImage.setIcon(icon);
                } else {
                    lblShowImage.setText("File not Available");
                }
                inputImage = computerDpt.getImage();
            }

        } // Electrical Depertment
        else if ((comboSelectDpt.getSelectedItem().toString()).equals("Electrical")) {

            electricalDptService = new ElectricalDptService();

            refreshAllFld();

            electricalDpt = electricalDptService.searchRecord(Integer.parseInt(txtSearchBar.getText()));

            if (electricalDpt != null) {

                student_DB_id = electricalDpt.getId();
                txtStudentId.setText(String.valueOf(electricalDpt.getStudent_id()));
                txtFirstName.setText(electricalDpt.getStudent_fst_name());
                txtSurname.setText(electricalDpt.getStudent_sur_name());

                if (electricalDpt.getDate_of_birth() != null) {

                    // get [ day,month,year ] from date_of_birth
                    date_of_birth = electricalDpt.getDate_of_birth();
                    day = date_of_birth.split("/")[0];
                    //System.out.println(day);
                    month = date_of_birth.split("/")[1];
                    //System.out.println(month);
                    year = date_of_birth.split("/")[2];
                    //System.out.println(year);
                    // set [ day,month,year ] in combo panel
                    comboDateOfBirthDay.setSelectedItem(day);
                    comboDateOfBirthMonth.setSelectedItem(month);
                    comboDateOfBirthYear.setSelectedItem(year);

                } else {
                    comboDateOfBirthDay.setSelectedIndex(0);
                    comboDateOfBirthMonth.setSelectedIndex(0);
                    comboDateOfBirthYear.setSelectedIndex(0);
                }

                if (electricalDpt.getGander() != null) {
                    if (electricalDpt.getGander().equals("Male")) {
                        radioBtnMale.setSelected(true);
                    } else if (electricalDpt.getGander().equals("Female")) {
                        radioBtnFemale.setSelected(true);
                    }
                }

                txtEmail.setText(electricalDpt.getEmail());
                txtMobileNumber.setText(electricalDpt.getNumber());
                txtAreaPresentAddress.setText(electricalDpt.getPresent_address());
                txtAreaPermanentAddress.setText(electricalDpt.getPermanent_address());
                txtHouseNo.setText(electricalDpt.getHouse_no());
                txtPostCOde.setText(String.valueOf(electricalDpt.getPost_code()));
                txtDptCode.setText(String.valueOf(electricalDpt.getDpt_code()));

                if (electricalDpt.getGetImage() != null) {
                    image = getToolkit().createImage(electricalDpt.getGetImage());
                    icon = new ImageIcon(image);
                    lblShowImage.setIcon(icon);
                } else {
                    lblShowImage.setText("File not Available");
                }
                inputImage = electricalDpt.getImage();
            }

        } // Civil Depertment
        else if ((comboSelectDpt.getSelectedItem().toString()).equals("Civil")) {

            civilDptService = new CivilDptService();

            refreshAllFld();

            civilDpt = civilDptService.searchRecord(Integer.parseInt(txtSearchBar.getText()));

            if (civilDpt != null) {

                student_DB_id = civilDpt.getId();
                txtStudentId.setText(String.valueOf(civilDpt.getStudent_id()));
                txtFirstName.setText(civilDpt.getStudent_fst_name());
                txtSurname.setText(civilDpt.getStudent_sur_name());

                if (civilDpt.getDate_of_birth() != null) {

                    // get [ day,month,year ] from date_of_birth
                    date_of_birth = civilDpt.getDate_of_birth();
                    day = date_of_birth.split("/")[0];
                    //System.out.println(day);
                    month = date_of_birth.split("/")[1];
                    //System.out.println(month);
                    year = date_of_birth.split("/")[2];
                    //System.out.println(year);
                    // set [ day,month,year ] in combo panel
                    comboDateOfBirthDay.setSelectedItem(day);
                    comboDateOfBirthMonth.setSelectedItem(month);
                    comboDateOfBirthYear.setSelectedItem(year);

                } else {
                    comboDateOfBirthDay.setSelectedIndex(0);
                    comboDateOfBirthMonth.setSelectedIndex(0);
                    comboDateOfBirthYear.setSelectedIndex(0);
                }

                if (civilDpt.getGander() != null) {
                    if (civilDpt.getGander().equals("Male")) {
                        radioBtnMale.setSelected(true);
                    } else if (civilDpt.getGander().equals("Female")) {
                        radioBtnFemale.setSelected(true);
                    }
                }

                txtEmail.setText(civilDpt.getEmail());
                txtMobileNumber.setText(civilDpt.getNumber());
                txtAreaPresentAddress.setText(civilDpt.getPresent_address());
                txtAreaPermanentAddress.setText(civilDpt.getPermanent_address());
                txtHouseNo.setText(civilDpt.getHouse_no());
                txtPostCOde.setText(String.valueOf(civilDpt.getPost_code()));
                txtDptCode.setText(String.valueOf(civilDpt.getDpt_code()));

                if (civilDpt.getGetImage() != null) {
                    image = getToolkit().createImage(civilDpt.getGetImage());
                    icon = new ImageIcon(image);
                    lblShowImage.setIcon(icon);
                } else {
                    lblShowImage.setText("File not Available");
                }
                inputImage = civilDpt.getImage();
            }

        } // Telecommunication Depertment
        else if ((comboSelectDpt.getSelectedItem().toString()).equals("Telecommunication")) {

            telecommunictionDptService = new TelecommunictionDptService();

            refreshAllFld();

            telecommunictionDpt = telecommunictionDptService.searchRecord(Integer.parseInt(txtSearchBar.getText()));

            if (telecommunictionDpt != null) {

                student_DB_id = telecommunictionDpt.getId();
                txtStudentId.setText(String.valueOf(telecommunictionDpt.getStudent_id()));
                txtFirstName.setText(telecommunictionDpt.getStudent_fst_name());
                txtSurname.setText(telecommunictionDpt.getStudent_sur_name());

                if (telecommunictionDpt.getDate_of_birth() != null) {

                    // get [ day,month,year ] from date_of_birth
                    date_of_birth = telecommunictionDpt.getDate_of_birth();
                    day = date_of_birth.split("/")[0];
                    //System.out.println(day);
                    month = date_of_birth.split("/")[1];
                    //System.out.println(month);
                    year = date_of_birth.split("/")[2];
                    //System.out.println(year);
                    // set [ day,month,year ] in combo panel
                    comboDateOfBirthDay.setSelectedItem(day);
                    comboDateOfBirthMonth.setSelectedItem(month);
                    comboDateOfBirthYear.setSelectedItem(year);

                } else {
                    comboDateOfBirthDay.setSelectedIndex(0);
                    comboDateOfBirthMonth.setSelectedIndex(0);
                    comboDateOfBirthYear.setSelectedIndex(0);
                }

                if (telecommunictionDpt.getGander() != null) {
                    if (telecommunictionDpt.getGander().equals("Male")) {
                        radioBtnMale.setSelected(true);
                    } else if (telecommunictionDpt.getGander().equals("Female")) {
                        radioBtnFemale.setSelected(true);
                    }
                }

                txtEmail.setText(telecommunictionDpt.getEmail());
                txtMobileNumber.setText(telecommunictionDpt.getNumber());
                txtAreaPresentAddress.setText(telecommunictionDpt.getPresent_address());
                txtAreaPermanentAddress.setText(telecommunictionDpt.getPermanent_address());
                txtHouseNo.setText(telecommunictionDpt.getHouse_no());
                txtPostCOde.setText(String.valueOf(telecommunictionDpt.getPost_code()));
                txtDptCode.setText(String.valueOf(telecommunictionDpt.getDpt_code()));

                if (telecommunictionDpt.getGetImage() != null) {
                    image = getToolkit().createImage(telecommunictionDpt.getGetImage());
                    icon = new ImageIcon(image);
                    lblShowImage.setIcon(icon);
                } else {
                    lblShowImage.setText("File not Available");
                }
                inputImage = telecommunictionDpt.getImage();
            }
        }


    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * # clear button this method clear all data in panel.
     *
     * @param evt
     */
    private void btnRefrashAllMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrashAllMethodActionPerformed
        // TODO add your handling code here:

        if ((comboSelectDpt.getSelectedItem().toString()).equals("Computer")) {
            refreshAllFld();
            refreshTable();
            computerDptDesplayInTable();

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Electrical")) {
            refreshAllFld();
            refreshTable();
            electricalDptDesplayInTable();

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Civil")) {
            refreshAllFld();
            refreshTable();
            civilDptDesplayInTable();

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Telecommunication")) {
            refreshAllFld();
            refreshTable();
            telecommunictionDptDesplayInTable();

        }

    }//GEN-LAST:event_btnRefrashAllMethodActionPerformed

    private void comboSelectDptItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboSelectDptItemStateChanged
        // TODO add your handling code here:

        if ((comboSelectDpt.getSelectedItem().toString()).equals("Computer")) {
            lblShowCurrentDpt.setText("Computer Department");
            refreshAllFld();
            refreshTable();
            computerDptDesplayInTable();
            txtSearchBar.setText(null);

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Electrical")) {
            lblShowCurrentDpt.setText("Electrical Department");
            refreshAllFld();
            refreshTable();
            electricalDptDesplayInTable();
            txtSearchBar.setText(null);

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Civil")) {
            lblShowCurrentDpt.setText("Civil Department");
            refreshAllFld();
            refreshTable();
            civilDptDesplayInTable();
            txtSearchBar.setText(null);

        } else if ((comboSelectDpt.getSelectedItem().toString()).equals("Telecommunication")) {
            lblShowCurrentDpt.setText("Telecommunication Department");
            refreshAllFld();
            refreshTable();
            telecommunictionDptDesplayInTable();
            txtSearchBar.setText(null);

        }

    }//GEN-LAST:event_comboSelectDptItemStateChanged

    private void btnComputerStudentListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComputerStudentListActionPerformed
        // TODO add your handling code here:
        new ComputerDptList().setVisible(true);
    }//GEN-LAST:event_btnComputerStudentListActionPerformed

    private void btnElectricalStudentListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElectricalStudentListActionPerformed
        // TODO add your handling code here:
        new ElectricalDptList().setVisible(true);
    }//GEN-LAST:event_btnElectricalStudentListActionPerformed

    private void btnCivilStudentListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCivilStudentListActionPerformed
        // TODO add your handling code here:
        new CivilDptList().setVisible(true);
    }//GEN-LAST:event_btnCivilStudentListActionPerformed

    private void btnTelecommunicationStudentListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelecommunicationStudentListActionPerformed
        // TODO add your handling code here:
        new TelecommunictionDptList().setVisible(true);
    }//GEN-LAST:event_btnTelecommunicationStudentListActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
    }//GEN-LAST:event_formWindowOpened

    /**
     * < computerDptDesplayTable() >
     * this method show all [ Computer department student information ] in
     * table.
     */
    public void computerDptDesplayInTable() {

        lblShowTableHadder.setText(null);
        lblShowTableHadder.setText("Computer Depertment All Student List");

        computerDptService = new ComputerDptService();

        List<ComputerDpt> getList = computerDptService.getRecordList();

        DefaultTableModel model = (DefaultTableModel) tblShowCurrentInformation.getModel();
        Object[] row = new Object[13];

        for (int i = 0; i < getList.size(); i++) {

            row[0] = getList.get(i).getId();
            row[1] = getList.get(i).getStudent_id();
            row[2] = getList.get(i).getStudent_fst_name();
            row[3] = getList.get(i).getStudent_sur_name();
            row[4] = getList.get(i).getDate_of_birth();
            row[5] = getList.get(i).getGander();
            row[6] = getList.get(i).getEmail();
            row[7] = getList.get(i).getNumber();
            row[8] = getList.get(i).getPresent_address();
            row[9] = getList.get(i).getPermanent_address();
            row[10] = getList.get(i).getHouse_no();
            row[11] = getList.get(i).getPost_code();
            row[12] = getList.get(i).getDpt_code();

            model.addRow(row);
        }

    }

    /**
     * < civilDptDesplayInTable() >
     * this method show all [ Civil department student information ] in table.
     */
    public void civilDptDesplayInTable() {

        lblShowTableHadder.setText(null);
        lblShowTableHadder.setText("Civil Depertment All Student List");

        civilDptService = new CivilDptService();

        List<CivilDpt> getList = civilDptService.getRecordList();

        DefaultTableModel model = (DefaultTableModel) tblShowCurrentInformation.getModel();
        Object[] row = new Object[13];

        for (int i = 0; i < getList.size(); i++) {

            row[0] = getList.get(i).getId();
            row[1] = getList.get(i).getStudent_id();
            row[2] = getList.get(i).getStudent_fst_name();
            row[3] = getList.get(i).getStudent_sur_name();
            row[4] = getList.get(i).getDate_of_birth();
            row[5] = getList.get(i).getGander();
            row[6] = getList.get(i).getEmail();
            row[7] = getList.get(i).getNumber();
            row[8] = getList.get(i).getPresent_address();
            row[9] = getList.get(i).getPermanent_address();
            row[10] = getList.get(i).getHouse_no();
            row[11] = getList.get(i).getPost_code();
            row[12] = getList.get(i).getDpt_code();

            model.addRow(row);
        }

    }

    /**
     * < electricalDptDesplayInTable() >
     * this method show all [ Electrical department student information ] in
     * table.
     */
    public void electricalDptDesplayInTable() {

        lblShowTableHadder.setText(null);
        lblShowTableHadder.setText("Electrical Depertment All Student List");

        electricalDptService = new ElectricalDptService();

        List<ElectricalDpt> getList = electricalDptService.getRecordList();

        DefaultTableModel model = (DefaultTableModel) tblShowCurrentInformation.getModel();
        Object[] row = new Object[13];

        for (int i = 0; i < getList.size(); i++) {

            row[0] = getList.get(i).getId();
            row[1] = getList.get(i).getStudent_id();
            row[2] = getList.get(i).getStudent_fst_name();
            row[3] = getList.get(i).getStudent_sur_name();
            row[4] = getList.get(i).getDate_of_birth();
            row[5] = getList.get(i).getGander();
            row[6] = getList.get(i).getEmail();
            row[7] = getList.get(i).getNumber();
            row[8] = getList.get(i).getPresent_address();
            row[9] = getList.get(i).getPermanent_address();
            row[10] = getList.get(i).getHouse_no();
            row[11] = getList.get(i).getPost_code();
            row[12] = getList.get(i).getDpt_code();

            model.addRow(row);
        }

    }

    /**
     * < telecommunictionDptDesplayInTable() >
     * this method show all [ Telecommunication department student information ]
     * in table.
     */
    public void telecommunictionDptDesplayInTable() {

        lblShowTableHadder.setText(null);
        lblShowTableHadder.setText("Telecommuniction Depertment All Student List");

        telecommunictionDptService = new TelecommunictionDptService();

        List<TelecommunictionDpt> getList = telecommunictionDptService.getRecordList();

        DefaultTableModel model = (DefaultTableModel) tblShowCurrentInformation.getModel();
        Object[] row = new Object[13];

        for (int i = 0; i < getList.size(); i++) {

            row[0] = getList.get(i).getId();
            row[1] = getList.get(i).getStudent_id();
            row[2] = getList.get(i).getStudent_fst_name();
            row[3] = getList.get(i).getStudent_sur_name();
            row[4] = getList.get(i).getDate_of_birth();
            row[5] = getList.get(i).getGander();
            row[6] = getList.get(i).getEmail();
            row[7] = getList.get(i).getNumber();
            row[8] = getList.get(i).getPresent_address();
            row[9] = getList.get(i).getPermanent_address();
            row[10] = getList.get(i).getHouse_no();
            row[11] = getList.get(i).getPost_code();
            row[12] = getList.get(i).getDpt_code();

            model.addRow(row);
        }

    }

    /**
     * < refreshTable >
     * this method clear only table.
     */
    public void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) tblShowCurrentInformation.getModel();
        model.setRowCount(0);
    }

    /**
     * < refreshAllFld() >
     * this method clear all text, combo box, text aria, radio button, all
     * field. without table.
     */
    public void refreshAllFld() {
        getBtnStatus = 0;
        lblShowImage.setIcon(null);
        lblShowImage.setText(null);

        txtStudentId.setText(null);
        txtFirstName.setText(null);
        txtSurname.setText(null);
        txtEmail.setText(null);
        txtMobileNumber.setText(null);
        txtHouseNo.setText(null);
        txtPostCOde.setText(null);
        txtDptCode.setText(null);
        txtAreaPresentAddress.setText(null);
        txtAreaPermanentAddress.setText(null);

        radioBtnMale.setSelected(true);
        comboDateOfBirthDay.setSelectedIndex(0);
        comboDateOfBirthMonth.setSelectedIndex(0);
        comboDateOfBirthYear.setSelectedIndex(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup allRadioBtnGroup;
    private javax.swing.JButton btnAddRecord;
    private javax.swing.JButton btnCivilStudentList;
    private javax.swing.JButton btnComputerStudentList;
    private javax.swing.JButton btnDeleteRecord;
    private javax.swing.JButton btnEditRecord;
    private javax.swing.JButton btnElectricalStudentList;
    private javax.swing.JButton btnImageChoose;
    private javax.swing.JButton btnRefrashAllMethod;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnTelecommunicationStudentList;
    private javax.swing.JComboBox<String> comboDateOfBirthDay;
    private javax.swing.JComboBox<String> comboDateOfBirthMonth;
    private javax.swing.JComboBox<String> comboDateOfBirthYear;
    private javax.swing.JComboBox<String> comboSelectDpt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblShowCurrentDpt;
    private javax.swing.JLabel lblShowImage;
    private javax.swing.JLabel lblShowMassage;
    private javax.swing.JLabel lblShowTableHadder;
    private javax.swing.JPanel mainPan;
    private javax.swing.JRadioButton radioBtnFemale;
    private javax.swing.JRadioButton radioBtnMale;
    private javax.swing.JScrollPane scrolpanMain;
    private javax.swing.JTable tblShowCurrentInformation;
    private javax.swing.JTextArea txtAreaPermanentAddress;
    private javax.swing.JTextArea txtAreaPresentAddress;
    private javax.swing.JTextField txtDptCode;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHouseNo;
    private javax.swing.JTextField txtMobileNumber;
    private javax.swing.JTextField txtPostCOde;
    private javax.swing.JTextField txtSearchBar;
    private javax.swing.JTextField txtStudentId;
    private javax.swing.JTextField txtSurname;
    // End of variables declaration//GEN-END:variables
}
